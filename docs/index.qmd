---
title: "Borehole Data Analysis for Clean Water Access"
author: 
    name: "Joseph Lwere"
    email: ljc3084@gmail.com
date: 13-February-2024
toc: true
warning: false
format: html
code-fold: true
bibliography: references.bib
editor: visual
---

# Introduction

## Project Description:-

This project will objectively be analyzing and interpreting raw borehole repair data to aid planing and decision making. Boreholes are the main technology used to access ground water in Uganda according to [@owor2022permeability], and also a source for drinking water for households in rural communities in Africa, Uganda inclusive [@lapworth2020drinking,], therefore it is important to have good quality data to inform decision making and planning. This project looks at data collected from two districts in central Uganda where a borehole operation and maintenance program is run. As professional operation and maintenance is looked at the future for borehole functionality in Uganda [@smith2023does], this project report offers more insights on research for this topic.  

# Methods
This data is collected from a sample of borehole repair records used by the borehole operation and maintenance company operating in central Uganda. Population data is picked as an interview from a representative of the Local Water User Committees (LWUCs). The data on the technical specifications about the borehole is picked from the borehole records file from the company.

```{r}
library(DataCombine)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(readr)
library(readxl)
library(gt)
library(dplyr)
library(knitr)
```

### Raw Data
We start by reading the raw data from the .csv file

```{r}
borehole <- read_csv(here::here("data/raw/borehole_repair_data.csv"))
```

### Data Transformation
Transforming the data into a readable variable name

```{r}
#| label: Data Transformation
new_well_yield <- borehole |> 
   rename("well_yield" = "well_yield_(m^3/hr)")
 processed_borehole_data <- drop_na(new_well_yield)

```

### Processed Data
Writing the processed data ready for analysis into the processed folder

```{r}
write_csv(processed_borehole_data, here::here("data/processed/processed_borehole_data.csv"))

```

Createing a new variable from the existing data

```{r}
district_column <- processed_borehole_data |> 
mutate(district = case_when(
  sub_county == "Gombe" ~ "Wakiso",
  sub_county == "Kakiri" ~ "Wakiso",
  sub_county == "Kakiri Town Council" ~ "Wakiso",
  sub_county == "Namayumba Town Council" ~ "Wakiso",
  sub_county == "Kira" ~ "Wakiso",
  TRUE ~ "Luwero"
  ))

```
# Results

### Distribution of well depth
The histogram below showing the distribution of well depth across two districts.

```{r}
#| label: Histogram showing distribution of well_depth per district

ggplot(data = district_column,
       mapping = aes(x = well_depth,
                     fill = district)) +
  geom_histogram()+
  xlab("Borehole Depth(m)")+
  ylab("No. of Boreholes")+
labs(title = "Borehole population served summary, data from two districts")
```
From the histogram above we can conclude that the average depth of boreholes in both Wakiso and Luwero District is similar. For both districts the depth of the biggest percentage of boreholes is below 75 meters deep. We can also see that there are extreme instances in Luwero district where three boreholes are deeper than 100 meters.

## Well Yield and Population
The scatterplot below showing well yield distribution and population served across the two districts.
```{r}
#| label: Chart showing distribution of well yield according to Population served
ggplot(data = district_column, 
       mapping = aes(x = population_served, 
                     y = well_yield, 
                     fill = district, 
                     color = district))+ 
  geom_point()+ 
  lims(y = c(0,100))+ 
  xlab("Populatin Served")+ 
  ylab("Borehole Yield(m3)")+
labs(title = "Borehole well yield yield vs population served in two districts")
```
## Boreholes repaired by quarter
The column chart below shows borehole numbers repaired by quarter and year.

```{r}

#| label: Column graph showing number of boreholes repaired by quarter of a year


summary_data <- processed_borehole_data |>  
  group_by(repair_date) |> 
  summarise(count = n())

ggplot(data = summary_data,
       mapping = aes(x = quarter(repair_date),
                     y = count,
                     fill = year(repair_date))) +
  geom_col()+
  xlab("Repair date/ Quarter")+
  ylab("No. of Boreholes")+
labs(title = "Borehole repaired by quarter of the year")
```


```{r}
# table creation
tbl_bhr_summary <- district_column |> 
  group_by(district) |> 
  summarise(
    count = n(),
    mean_popn = mean(population_served),
    sd_popn = sd(population_served),
    median_popn = median(population_served)
  ) 
# export table to processed folder 
write_csv(tbl_bhr_summary, here::here("data/processed/tbl-01-bhr-summary.csv"))


```

@tbl_bhr_summary shows that Wakiso District has more people served by just 11 boreholes compared to Luwero District which has 136 boreholes.

## Boreholes characteristics
The table below shows borehole characteristics in the two districts of operation.
```{r}
#| label: tbl_bhr_summary
#| tbl-cap: "Borehole population served summary data from two districts"
# Using kable() to display the bhr-summary table
kable(tbl_bhr_summary)
```


## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).




# Conclusions

# References

\`\`\`
